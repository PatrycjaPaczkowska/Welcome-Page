{"version":3,"sources":["components/ButtonToTask.js","components/InputChangeTitle.js","components/Greeting.js","containers/Calculators/SimpleCalculator/SimpleCalculator.js","containers/Calculators/CurrencyCalculator/CurrencyCalculator.js","containers/Calculators/Calculators.js","containers/Savings/Context.js","containers/Savings/AimAndMoney.js","containers/Savings/Form.js","containers/Savings/InputToSaveMoney.js","containers/Savings/ResultPanelInfo.js","containers/Savings/ResultPanel.js","containers/Savings/Savings.js","containers/Weather/Weather.js","App.js","index.js"],"names":["StyledButton","withStyles","root","background","borderRadius","border","color","height","padding","margin","boxShadow","label","textTransform","Button","ButtonToTask","href","className","InputChangeTitle","handleChangeTitle","oldTitle","close","useState","newTitle","setNewTitle","fontSize","type","value","onChange","e","target","onClick","Greeting","isClickedButton","setClickedButton","textTitle","setTextTitle","showInput","toggleTextButton","SimpleCalculator","CurrencyCalculator","Calculators","defaultCalc","setDefaultCalc","currencyCalc","setCurrencyCalc","showDefaultCalc","showCurrencyCalc","Context","createContext","allValue","aim","moneyToSave","money","moneyOnWallet","remains","AppProvider","children","useReducer","info","action","changeStatus","data","Error","dispatch","useEffect","Provider","AimAndMoney","useContext","showInfo","display","Form","newAim","setNewAim","setMoneyToSave","showForm","setShowForm","errorinfo","setErrorInfo","validAim","validMoney","handleValueFromInput","name","styleForm","showButton","errorInfoParagraph","style","min","preventDefault","length","InputToSaveMoney","dollars","setDollars","noValidate","Number","newInfo","ResultPanel","moneyOnWalletNumber","infoRemains","infoAim","compToShow","ResultPanelInfo","showPanel","Savings","Weather","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ed6b611.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst StyledButton = withStyles({\r\n   root: {\r\n     background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n     borderRadius: 3,\r\n     border: 0,\r\n     color: 'white',\r\n     height: 48,\r\n     padding: '0 30px',\r\n     margin: '30px auto',\r\n     boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n   },\r\n   label: {\r\n     textTransform: 'uppercase',\r\n   },\r\n })(Button);\r\n\r\n\r\nconst ButtonToTask = () => {\r\n   return (\r\n      <>\r\n      <StyledButton href=\"https://patrycjapaczkowska.github.io/To-do-application/\" className=\"App_buttonToTask\">\r\n         Go to the tasks\r\n      </StyledButton>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ButtonToTask;","import { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst InputChangeTitle = ({ handleChangeTitle, oldTitle, close }) => {\r\n   const [newTitle, setNewTitle] = useState(oldTitle);\r\n\r\n   const handleOnChangeTitle = (e) => {\r\n      setNewTitle(e.target.value);\r\n   };\r\n\r\n   handleChangeTitle(newTitle);\r\n\r\n   \r\nconst StyledButton = withStyles({\r\n   root: {\r\n     background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n     borderRadius: 3,\r\n     border: 0,\r\n     color: 'white',\r\n     fontSize: '.5em',\r\n     height: 20,\r\n     padding: '0 20px',\r\n     margin: '10px',\r\n     boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n   },\r\n   label: {\r\n     textTransform: 'uppercase',\r\n   },\r\n })(Button);\r\n\r\n\r\n\r\n   return (\r\n      <>\r\n         <input className=\"App__greeting--input\" type=\"text\" value={newTitle} onChange={handleOnChangeTitle} />\r\n         <StyledButton onClick={close}>Close</StyledButton>\r\n      </>);\r\n}\r\n\r\nexport default InputChangeTitle;","import React, { useState } from 'react';\r\nimport InputChangeTitle from './InputChangeTitle';\r\n\r\nconst Greeting = () => {\r\n   const defaultTitle = \"Hi, how is your plan today?\";\r\n   const [isClickedButton, setClickedButton] = useState(false);\r\n   const [textTitle, setTextTitle] = useState(defaultTitle);\r\n\r\n\r\n   const handleChangeTitle = (newTitle) => {\r\n\r\n      if (isClickedButton) {\r\n         setTextTitle(newTitle);\r\n      } else if (!isClickedButton) {\r\n         setClickedButton(true);\r\n         return;\r\n      }\r\n   };\r\n\r\n   const closeInputChangeTitle = () => {\r\n      setClickedButton(false);\r\n   }\r\n\r\n   const showInput = isClickedButton && <InputChangeTitle handleChangeTitle={handleChangeTitle} oldTitle={textTitle} close={closeInputChangeTitle}/>;\r\n\r\n   const toggleTextButton = isClickedButton ? null : <p className=\"App__greeting--button\" onClick={handleChangeTitle}>Change greeting</p>;\r\n\r\n   return (\r\n      <div className=\"App__greeting\">\r\n         <h1 className=\"App__greeting--title\">{textTitle}</h1>\r\n         {toggleTextButton}\r\n         {showInput}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Greeting;","import React from 'react';\r\n\r\nconst SimpleCalculator = () => {\r\n   return ( \r\n      <div className=\"App__Calculators__Simple\">Simple Calculator</div>\r\n\r\n    );\r\n}\r\n \r\nexport default SimpleCalculator;","import React from 'react';\r\n\r\nconst CurrencyCalculator = () => {\r\n   return (\r\n      <div className=\"App__Calculators__Currency\">Currency Calculator</div>\r\n   );\r\n}\r\n\r\nexport default CurrencyCalculator;","import React, { useState } from 'react';\r\nimport SimpleCalculator from '../Calculators/SimpleCalculator/SimpleCalculator';\r\nimport CurrencyCalculator from './CurrencyCalculator/CurrencyCalculator';\r\n\r\nconst Calculators = () => {\r\n\r\n   const [defaultCalc, setDefaultCalc] = useState(false);\r\n   const [currencyCalc, setCurrencyCalc] = useState(false);\r\n\r\n   const handleDefault = () => {\r\n      if (currencyCalc) {\r\n         setCurrencyCalc(false);\r\n         setDefaultCalc(true);\r\n      } else {\r\n         setDefaultCalc(true);\r\n      }\r\n   }\r\n\r\n   const handleCurrency = () => {\r\n      if (defaultCalc) {\r\n         setDefaultCalc(false);\r\n         setCurrencyCalc(true);\r\n      } else {\r\n         setCurrencyCalc(true);\r\n      }\r\n\r\n   }\r\n   const closeAllCalc = () => {\r\n      setDefaultCalc(false);\r\n      setCurrencyCalc(false);\r\n   }\r\n\r\n  const showDefaultCalc = defaultCalc ? <SimpleCalculator /> : null;\r\n  const showCurrencyCalc = currencyCalc ? <CurrencyCalculator /> : null;\r\n\r\n   return (\r\n      <div className=\"App__Calculators\">\r\n         <div className=\"App__Calculators--buttons\">\r\n            <button className=\"App__Calculators--button\" onClick={handleDefault}>Default Calculator</button>\r\n            <button className=\"App__Calculators--button\" onClick={handleCurrency}>Currency Calculator</button>\r\n            <button className=\"App__Calculators--button\" onClick={closeAllCalc}>Close</button>\r\n         </div>\r\n         {showCurrencyCalc}\r\n         {showDefaultCalc}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Calculators;","import React, { createContext, useEffect, useReducer } from 'react';\r\n\r\n\r\nexport const Context = createContext();\r\n\r\nconst ADD = 'ADD';\r\nconst FETCH = 'FETCH';\r\n\r\n\r\nlet allValue = {\r\n   aim: '',\r\n   moneyToSave: null,\r\n   money: null,\r\n   moneyOnWallet: null,\r\n   remains: null\r\n}\r\n\r\n// let allValue = {\r\n//    aim: 'książka',\r\n//    moneyToSave: 50,\r\n//    money: 0,\r\n//    moneyOnWallet: 0,\r\n//    remains: 50\r\n// }\r\n\r\nconst changeStatus = (info, action) => {\r\n    const {aim, moneyToSave, money, moneyOnWallet, remains } = action.info;\r\n  \r\n   return allValue = {\r\n      aim,\r\n      moneyToSave,\r\n      money,\r\n      moneyOnWallet,\r\n      remains,\r\n   }\r\n}\r\n\r\nconst AppProvider = ({ children }) => {\r\n   const moneyReducer = (info, action) => {\r\n\r\n      switch (action.type) {\r\n         case ADD:\r\n            return changeStatus(info, action);\r\n         case FETCH:\r\n            return action.data;\r\n         default:\r\n            throw new Error(\"Nie znaleziono akcji w coursesReducer\")\r\n      }\r\n   }\r\n\r\n   const [info, dispatch] = useReducer(moneyReducer, []);\r\n\r\n   useEffect(() => {\r\n      dispatch({ type: FETCH, data: allValue })\r\n   }, [])\r\n\r\n   return (\r\n      <Context.Provider value={{ info, dispatch }} >\r\n         {children}\r\n      </Context.Provider>\r\n   )\r\n}\r\n\r\nexport default AppProvider;","import React, { useContext } from 'react';\r\nimport { Context } from './Context';\r\n\r\nconst AimAndMoney = () => {\r\n// eslint-disable-next-line\r\n   const { info, dispatch } = useContext(Context);\r\n\r\n   const showInfo = info.aim ? <div className=\"App__Savings--title\"><p>I'm saving up for: {info.aim} </p><p>The cost is: {info.moneyToSave}$ </p></div> : null;\r\n   return (\r\n      <>\r\n         <p className=\"App__Savings--title\">Saving App</p>\r\n         {showInfo}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default AimAndMoney;","import React, { useContext, useState } from 'react';\r\nimport { Context } from './Context';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst StyledButton = withStyles({\r\n   root: {\r\n      display: 'block',\r\n     background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n     borderRadius: 3,\r\n     border: 0,\r\n     color: 'white',\r\n     height: 48,\r\n     padding: '0 30px',\r\n     margin: '20px auto 0',\r\n    \r\n   },\r\n   label: {\r\n     textTransform: 'uppercase',\r\n   },\r\n })(Button);\r\n\r\n\r\nconst Form = () => {\r\n   // eslint-disable-next-line\r\n   const { info, dispatch } = useContext(Context);\r\n\r\n   const [newAim, setNewAim] = useState(\"\");\r\n   const [moneyToSave, setMoneyToSave] = useState(\"\");\r\n   const [showForm, setShowForm] = useState(true);\r\n   const [errorinfo, setErrorInfo] = useState(\"\");\r\n\r\n   let validAim = false;\r\n   let validMoney = false;\r\n\r\n   const handleValueFromInput = (e) => {\r\n      const { name, value, type } = e.target;\r\n\r\n      if (type === 'number' || type === 'text') {\r\n         if (name === 'newAim') {\r\n            setNewAim(value);\r\n         } else if (name === 'moneyToSave') {\r\n            setMoneyToSave(value);\r\n         }\r\n      }\r\n   }\r\n\r\n   const validationForm = () => {\r\n      validAim = newAim.length > 2 ? true : false;\r\n      validMoney = moneyToSave > 0 ? true : false;\r\n\r\n      if (!validAim && !validMoney) {\r\n         setErrorInfo(\"Check that the destination name has a minimum of 3 characters and contains letters and whether the cost is at least $1\");\r\n      } else if (!validMoney) {\r\n         setErrorInfo(\"Check if the amount is at least 1$ \");\r\n      } else if (!validAim) {\r\n         setErrorInfo(\"Check that the destination name has a minimum of 3 characters and contains letters \")\r\n      }\r\n      return validAim && validMoney;\r\n   }\r\n\r\n   const saveForm = (e) => {\r\n      e.preventDefault();\r\n\r\n      let valid = false;\r\n      valid = validationForm();\r\n\r\n      if (!valid) return;\r\n\r\n      let info = {\r\n         aim: newAim,\r\n         moneyToSave,\r\n         money: 0,\r\n         moneyOnWallet: 0,\r\n         remains: moneyToSave,\r\n      }\r\n\r\n\r\n      dispatch({\r\n         info,\r\n         type: 'ADD'\r\n      })\r\n      setNewAim(\"\");\r\n      setMoneyToSave(\"\");\r\n      setShowForm(false);\r\n      setErrorInfo(\"\");\r\n\r\n   }\r\n\r\n   const handleShowForm = () => {\r\n      setShowForm(true);\r\n      let info = {\r\n         aim: '',\r\n         moneyToSave: 0,\r\n         money: 0,\r\n         moneyOnWallet: 0,\r\n         remains: 0,\r\n      }\r\n      dispatch({\r\n         info,\r\n         type: 'ADD'\r\n      })\r\n   };\r\n\r\n   const styleForm = {\r\n      display: showForm ? 'block' : 'none',\r\n     \r\n   }\r\n\r\n   const showButton = showForm ? null : <StyledButton onClick={handleShowForm}>New Aim</StyledButton>;\r\n\r\nconst errorInfoParagraph = <p className=\"App__Savings--errors\">{errorinfo}</p>;\r\n\r\n   return (\r\n      <div className=\"App__Savings--aim\">\r\n\r\n         <form style={styleForm}>\r\n            <p>Please, write what's your aim:</p>\r\n            <input\r\n               className=\"App__Savings--aim--input\"\r\n               type=\"text\"\r\n               value={newAim}\r\n               name=\"newAim\"\r\n               onChange={handleValueFromInput} />\r\n\r\n            <p className=\"App__Savings--aim--label\">and how much it costs:</p>\r\n            <input\r\n               className=\"App__Savings--aim--input\"\r\n               type=\"number\"\r\n               name=\"moneyToSave\"\r\n               value={moneyToSave}\r\n               onChange={handleValueFromInput}\r\n               min=\"1\" /> $\r\n\r\n            <StyledButton\r\n               className=\"App__Savings--aim--button\"\r\n               onClick={saveForm}>\r\n               Let's go!\r\n            </StyledButton>\r\n         </form>\r\n         {showButton}\r\n         {errorInfoParagraph}\r\n      </div>\r\n\r\n   );\r\n}\r\n\r\nexport default Form;","import React, { useContext, useState } from 'react';\r\nimport { Context } from './Context';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst StyledButton = withStyles({\r\n   root: {\r\n      display: 'block',\r\n     background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n     borderRadius: 3,\r\n     border: 0,\r\n     color: 'white',\r\n     height: 48,\r\n     padding: '0 30px',\r\n     margin: '20px auto 0',\r\n    \r\n   },\r\n   label: {\r\n     textTransform: 'uppercase',\r\n   },\r\n })(Button);\r\n\r\nconst InputToSaveMoney = () => {\r\n   const { info, dispatch } = useContext(Context);\r\n\r\n   const [dollars, setDollars] = useState(\"\");\r\n   const [errorinfo, setErrorInfo] = useState(\"\");\r\n\r\n   const handleDollars = (e) => {\r\n      setDollars(e.target.value);\r\n   }\r\n\r\n   const handleSave = (e) => {\r\n      e.preventDefault();\r\n      if (dollars < 1) {\r\n         setErrorInfo(\"Check if the amount is at least 1$ \")\r\n         return;\r\n      }\r\n      else if (dollars > info.remains) {\r\n         setErrorInfo(`The deposit can't contain letters and amount can't be larger than remains to the end`);\r\n         return;\r\n      }\r\n\r\n      let remains = Number(info.remains) - Number(dollars);\r\n\r\n      let moneyOnWallet = Number(info.money + dollars);\r\n\r\n      let newInfo = {\r\n         aim: info.aim,\r\n         moneyToSave: info.moneyToSave,\r\n         moneyOnWallet,\r\n         remains,\r\n      }\r\n\r\n\r\n      dispatch({\r\n         info: newInfo, \r\n         type: 'ADD'\r\n      });\r\n\r\n      setDollars(0);\r\n      setErrorInfo(\"\");\r\n   }\r\n\r\nconst errorInfoParagraph = <p className=\"App__Savings--errors\">{errorinfo}</p>\r\n   return (\r\n      <form className=\"App__Savings--InputToSaveComponent\"\r\n      noValidate>\r\n         <input \r\n         className=\"App__Savings--InputToSaveComponent--inputToSaveMoney\"\r\n         type=\"number\" \r\n         name=\"dollars\" \r\n         value={dollars} \r\n         onChange={handleDollars} \r\n         min=\"1\" \r\n         noValidate\r\n         />\r\n         <StyledButton onClick={handleSave}>Save!</StyledButton>\r\n         {errorInfoParagraph}\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default InputToSaveMoney;","import React, { useContext } from 'react';\r\nimport { Context } from './Context';\r\nimport InputToSaveMoney from './InputToSaveMoney';\r\n\r\n\r\nconst ResultPanel = () => {\r\n   // eslint-disable-next-line\r\n   const { info, dispatch } = useContext(Context);\r\n\r\n   const moneyOnWalletNumber = Number(info.moneyOnWallet);\r\n\r\n   const style = {\r\n      display: info.aim ? 'block' : 'none',\r\n   }\r\n\r\n\r\n   return (\r\n      <div className=\"App__Savings--container\" style={style}>\r\n         <div className=\"App__Savings--panelsInfo\">\r\n            <div className=\"App__Savings--panelsInfo--panel\">\r\n               Saved money:\r\n            <p className=\"App__Savings--panelsInfo--panel--number\">{moneyOnWalletNumber} $</p>\r\n            </div>\r\n            <div className=\"App__Savings--panelsInfo--panel\">\r\n               It remains to the end:\r\n               <p className=\"App__Savings--panelsInfo--panel--number\">{info.remains} $</p></div>\r\n         </div>\r\n         <InputToSaveMoney />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ResultPanel;","import React, { useContext } from 'react';\r\nimport { Context } from './Context';\r\nimport ResultPanelInfo from './ResultPanelInfo';\r\n\r\nconst ResultPanel = () => {\r\n   // eslint-disable-next-line\r\n   const { info, dispatch } = useContext(Context);\r\n\r\n   const showPanel = () => {\r\n\r\n      const infoRemains = info.remains === 0;\r\n      const infoAim = info.aim;\r\n      let compToShow = <ResultPanelInfo />;\r\n\r\n      if (infoRemains && infoAim) {\r\n         compToShow = (\r\n         <div className=\"App__Savings--congratulations\">\r\n         <p>Congratulations!</p>\r\n         <p>Finally, you saved money for: {infoAim}</p></div>\r\n         );\r\n      }\r\n\r\n      return compToShow;\r\n   }\r\n   return (\r\n      showPanel()\r\n   );\r\n}\r\n\r\nexport default ResultPanel;","import React from 'react';\r\nimport AimAndMoney from './AimAndMoney';\r\nimport AppProvider from './Context';\r\nimport Form from './Form';\r\nimport ResultPanel from './ResultPanel';\r\n\r\nconst Savings = () => {\r\n   return (\r\n      <AppProvider>\r\n         <div className=\"App__Savings\">\r\n            <AimAndMoney />\r\n            <Form />\r\n            <ResultPanel />\r\n         </div>\r\n\r\n      </AppProvider>\r\n   );\r\n}\r\n\r\nexport default Savings;","import React from 'react';\r\n\r\nconst Weather = () => {\r\n   return ( \r\n      <div className=\"App__weather\">\r\n            <img src=\"/\" alt=\"sun\" />\r\n            <p>20.20.2021, 13:55:11</p>\r\n            <p>Gdańsk</p>\r\n            <p>25<sup>o</sup>C</p>\r\n         </div>\r\n    );\r\n}\r\n \r\nexport default Weather;","import React from 'react';\nimport ButtonToTask from './components/ButtonToTask';\n// COMPONENTS AND CONTAINERS\nimport Greeting from './components/Greeting';\nimport Calculators from './containers/Calculators/Calculators';\nimport Savings from './containers/Savings/Savings';\nimport Weather from './containers/Weather/Weather';\nimport './styles/main-styles.scss';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <Weather />\n         <Greeting />\n         <ButtonToTask />\n\n         <div className=\"App__panels\">\n            <Savings />\n            <Calculators />\n         </div>\n\n      </div>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}